version: "3.1"
services:
  backend:
    container_name: balance-mentor-back
    build: ./balance-back
    ports:
      - "3030:3030"
    depends_on:
      - postgres_db
    restart: always
    networks:
      app-network:
        ipv4_address: 172.25.0.4

  frontend:
    container_name: balance-mentor-front
    build: ./balance-front
    environment:
      - NEXT_PUBLIC_PATH_BACK=http://172.25.0.4:3030
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network
    restart: always

  postgres_db:
    container_name: ${POSTGRES_DB}
    image: postgres:15.2-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
      - "./balance-back-master/sql:/docker-entrypoint-initdb.d"
    networks:
      - app-network
    restart: always

  pgadmin:
    image: dpage/pgadmin4:6.17
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - postgres_db
    networks:
      - app-network
    restart: always

  # nginx:
  #   container_name: balance-mentor-nginx
  #   build: ./nginx
  #   ports:
  #   - "80:80"
  #   depends_on:
  #   - frontend
  #   - backend
  #   networks:
  #   - app-network

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  postgres-data:
    external: false
